---
import Layout from "../layouts/Layout.astro";
import { fixForURL, fixForURLDecode } from "../lib/string-utils";
import { fetchData } from "../lib/github-utils";

const repo = Astro.url.searchParams.get("repo");
const path = fixForURLDecode(Astro.url.searchParams.get("file"));
const [owner, repoName] = repo.split("/").slice(-2);

let files = await fetchData(owner, repoName, path || "");

let isFolder = false;
if (path) {
    const fileData = await fetchData(owner, repoName, path);
    isFolder = !path.includes(".");
    if (!isFolder) {
        return Astro.redirect(`/view?repo=${repo}&file=${fixForURL(path)}`);
    } else {
        files = fileData;
    }
}

// filter out hidden folders (starts with .)
files = files.filter(file => !file.name.startsWith("."));

const parentPath = path ? path.split("/").slice(0, -1).join("/") : "";
---

<Layout title="Repository Files">
    <main class="container">
        <aside class="sidebar">
            <h2>Current Folder: {path || "root"}</h2>
            {path && <a href={`/browse?repo=${encodeURIComponent(repo)}&file=${fixForURL(parentPath)}`}>.. (Go up)</a>}
        </aside>
        <section class="file-list">
            <h1>Files in {repoName}</h1>
            <ul>
                {files.map(file => (
                        <li>
                            <a href={`/browse?repo=${encodeURIComponent(repo)}&file=${fixForURL(file.path)}`}>{file.name}</a>
                        </li>
                ))}
            </ul>
        </section>
    </main>
</Layout>

<style>
    .container {
        display: flex;
        padding: 2rem;
    }

    .sidebar {
        width: 200px;
        margin-right: 2rem;
    }

    .file-list {
        flex: 1;
    }

    ul {
        list-style-type: none;
        padding: 0;
    }

    li {
        margin: 0.5rem 0;
    }

    a {
        text-decoration: none;
        color: #4f39fa;
    }

    a:hover {
        text-decoration: underline;
    }
</style>